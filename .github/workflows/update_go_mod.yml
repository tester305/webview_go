name: AUWRD (Auto Update webview_go Replace Directive)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  update-replace:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main project
        uses: actions/checkout@v4

      - name: Fetch latest commit info from tester305/webview_go
        run: |
          set -e

          echo "Fetching latest commit info from GitHub API..."
          COMMIT_JSON=$(curl -s https://api.github.com/repos/tester305/webview_go/commits/master)
          LATEST_HASH=$(echo "$COMMIT_JSON" | jq -r '.sha')
          COMMIT_DATE=$(echo "$COMMIT_JSON" | jq -r '.commit.committer.date')

          if [ "$LATEST_HASH" = "null" ] || [ -z "$LATEST_HASH" ]; then
            echo "Failed to fetch latest commit hash. Aborting."
            exit 1
          fi

          if [ "$COMMIT_DATE" = "null" ] || [ -z "$COMMIT_DATE" ]; then
            echo "Failed to fetch commit date. Aborting."
            exit 1
          fi

          UTC_DATE=$(date -u -d "$COMMIT_DATE" +"%Y%m%d%H%M%S")
          PSEUDO_VERSION="v0.0.0-${UTC_DATE}-${LATEST_HASH:0:12}"
          echo "Latest pseudo-version: $PSEUDO_VERSION"

          # Remove any duplicate replace lines
          sed -i.bak '/replace github.com\/tester305\/webview_go =>/d' go.mod

          # Inject or update replace directive
          if grep -q "replace github.com/webview/webview_go" go.mod; then
            echo "Updating existing redirect to tester305/webview_go..."
            sed -i "s|replace github.com/webview/webview_go .*|replace github.com/webview/webview_go => github.com/tester305/webview_go $PSEUDO_VERSION|" go.mod
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          else
            echo "Injecting new replace directive..."
            echo "" >> go.mod
            echo "replace github.com/webview/webview_go => github.com/tester305/webview_go $PSEUDO_VERSION" >> go.mod
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.2'

      - name: Tidy go.mod and go.sum
        if: env.UPDATE_NEEDED == 'true'
        run: go mod tidy

      - name: Commit and push changes
        if: env.UPDATE_NEEDED == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add go.mod go.sum
          git diff --cached --quiet || git commit -m "AUWRD: update tester305/webview_go pseudo-version"
          git push
          
