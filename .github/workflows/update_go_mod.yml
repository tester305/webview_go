name: AUWRD (Auto Update webview_go Replace Directive)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  update-replace:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main project
        uses: actions/checkout@v4

      - name: Fetch latest commit from webview_go and update go.mod
        run: |
          LATEST_HASH=$(git ls-remote https://github.com/tester305/webview_go.git refs/heads/master | cut -f1)
          COMMIT_DATE=$(curl -s https://api.github.com/repos/tester305/webview_go/commits/$LATEST_HASH | jq -r '.commit.committer.date')
          UTC_DATE=$(date -u -d "$COMMIT_DATE" +"%Y%m%d%H%M%S")
          PSEUDO_VERSION="v0.0.0-${UTC_DATE}-${LATEST_HASH:0:12}"
          echo "Latest pseudo-version: $PSEUDO_VERSION"

          # Check if replace directive exists
          if grep -q "replace github.com/webview/webview_go =>" go.mod; then
            CURRENT_VERSION=$(grep 'replace github.com/webview/webview_go =>' go.mod | awk '{print $5}')
            if [ "$PSEUDO_VERSION" != "$CURRENT_VERSION" ]; then
              echo "Updating replace directive..."
              sed -i "s|replace github.com/webview/webview_go => .*|replace github.com/webview/webview_go => github.com/tester305/webview_go $PSEUDO_VERSION|" go.mod
              echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
            else
              echo "Replace directive already up to date."
              echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
            fi
          else
            echo "Injecting new replace directive..."
            echo "" >> go.mod
            echo "replace github.com/webview/webview_go => github.com/tester305/webview_go $PSEUDO_VERSION" >> go.mod
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          fi

          # Also update the require line
          if grep -q "require github.com/webview/webview_go" go.mod; then
            sed -i "s|require github.com/webview/webview_go .*|require github.com/webview/webview_go $PSEUDO_VERSION|" go.mod
          else
            echo "require github.com/webview/webview_go $PSEUDO_VERSION" >> go.mod
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.2'

      - name: Tidy go.mod and go.sum
        if: env.UPDATE_NEEDED == 'true'
        run: go mod tidy

      - name: Commit and push changes
        if: env.UPDATE_NEEDED == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add go.mod go.sum
          git diff --cached --quiet || git commit -m "Auto-update webview_go pseudo-version"
          git push

          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add go.mod go.sum
          git diff --cached --quiet || git commit -m "Auto-update webview_go pseudo-version"
          git push

