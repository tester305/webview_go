name: Continuous Build

on:
  push:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
      fail-fast: false

    runs-on: ${{ matrix.goos == 'windows' && 'windows-latest' || matrix.goos == 'darwin' && 'macos-latest' || 'ubuntu-latest' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install pkg-config gtk+3
        shell: bash

      - name: Build binary
        run: |
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            $env:GOOS="${{ matrix.goos }}"
            $env:GOARCH="${{ matrix.goarch }}"
            go build -v -o webview_go-windows-${{ matrix.goarch }}.exe
          else
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o webview_go-${{ matrix.goos }}-${{ matrix.goarch }}
          fi
        shell: bash

      - name: Package binary into .zip
        run: |
          mkdir -p dist
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            zip -j dist/webview_go-windows-${{ matrix.goarch }}.zip webview_go-windows-${{ matrix.goarch }}.exe
          else
            zip -j dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}.zip webview_go-${{ matrix.goos }}-${{ matrix.goarch }}
          fi
        shell: bash

      - name: Upload artifact for Actions
        uses: actions/upload-artifact@v4
        with:
          name: webview_go-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built zips
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create or Update Continuous Build Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: continuous
          name: "Continuous Build"
          body: "Latest cross-platform build of webview_go (auto-updated on push)."
          files: ./dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
