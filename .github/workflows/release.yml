name: Continuous Build

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.23'

      - name: Install Linux dependencies
        if: matrix.goos == 'linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev zip

      - name: Install macOS dependencies
        if: matrix.goos == 'darwin'
        run: |
          brew update
          brew install pkg-config zip

      - name: Install Windows dependencies
        if: matrix.goos == 'windows'
        run: echo "Skipping zip install—PowerShell has native zip support"

      - name: Build (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p dist
          OUTPUT="dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=1 go build -v -o "$OUTPUT"

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          mkdir dist
          $output = "dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          $env:GOOS = "${{ matrix.goos }}"
          $env:GOARCH = "${{ matrix.goarch }}"
          $env:CGO_ENABLED = "1"
          go build -v -o $output

      - name: Upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: webview_go-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Generate next tag and title
        id: tagger
        run: |
          git fetch --tags
          latest=$(git tag | grep '^continuous-' | sort -V | tail -n1)
          if [ -z "$latest" ]; then
            next_tag="continuous-1"
            title="1 Continuous Build"
          else
            base=$(echo "$latest" | sed 's/^continuous-//' | cut -d. -f1)
            sub=$(echo "$latest" | sed 's/^continuous-//' | cut -s -d. -f2)
            if [ -z "$sub" ]; then
              num=$((base + 1))
              if [ "$num" -gt 1000 ]; then
                next_tag="continuous-1.1"
                title="1.1 Continuous Build"
              else
                next_tag="continuous-$num"
                title="$num Continuous Build"
              fi
            else
              major=$base
              minor=$((sub + 1))
              next_tag="continuous-$major.$minor"
              title="$major.$minor Continuous Build"
            fi
          fi
          echo "next_tag=$next_tag" >> $GITHUB_OUTPUT
          echo "release_title=$title" >> $GITHUB_OUTPUT
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -f "$next_tag"
          git push origin --force "refs/tags/$next_tag"

      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tagger.outputs.next_tag }}
          name: ${{ steps.tagger.outputs.release_title }}
          body: |
            Latest cross-platform build of webview_go.
            ✅ Linux amd64
            ✅ macOS amd64
            ✅ Windows amd64
            ⚠️ This is a archive file, these are not meant to be executed, if your wondering "OH THEN WHY DID U GENERATE IT?" It's a archive auto-generated by github actions and this was added because why not
          files: ./dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}


