name: Continuous Build

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
      fail-fast: false

    runs-on: ${{ matrix.os == 'windows' && 'windows-latest' || matrix.os == 'darwin' && 'macos-latest' || 'ubuntu-latest' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      # -------------------------
      # Install dependencies
      # -------------------------
      - name: Install dependencies (Linux)
        if: matrix.os == 'linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev zip

      - name: Install dependencies (macOS)
        if: matrix.os == 'darwin'
        run: |
          brew update
          brew install pkg-config zip
          export CC=clang
          export CXX=clang++

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows'
        run: |
          choco install -y zip mingw
          setx CC x86_64-w64-mingw32-gcc
          setx CXX x86_64-w64-mingw32-g++

      # -------------------------
      # Skip unwanted combinations
      # -------------------------
      - name: Skip unsupported builds
        if: (matrix.os == 'linux' && matrix.arch == 'arm64') || (matrix.os == 'windows' && matrix.arch == 'arm64')
        run: echo "Skipping unsupported build for ${{ matrix.os }} ${{ matrix.arch }}" && exit 0

      # -------------------------
      # Build step
      # -------------------------
      - name: Build
        run: |
          mkdir -p dist
          OUTPUT="dist/webview_go-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}"
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -v -o "$OUTPUT"

      # -------------------------
      # Upload artifacts
      # -------------------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webview_go-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/webview_go-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create or Update Continuous Build Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: continuous
          name: "Continuous Build"
          body: "Latest cross-platform build of webview_go (auto-updated on push)."
          files: ./dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
