name: Continuous Build

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release (e.g., continuous-second)'
        required: true
        default: 'continuous-second'

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Linux dependencies
        if: matrix.goos == 'linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev zip

      - name: Install macOS dependencies
        if: matrix.goos == 'darwin'
        run: |
          brew update
          brew install pkg-config zip

      - name: Install Windows dependencies
        if: matrix.goos == 'windows'
        run: echo "Skipping zip install—PowerShell has native zip support"

      - name: Build (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p dist
          OUTPUT="dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=1 go build -v -o "$OUTPUT"

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          mkdir dist
          $output = "dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          $env:GOOS = "${{ matrix.goos }}"
          $env:GOARCH = "${{ matrix.goarch }}"
          $env:CGO_ENABLED = "1"
          go build -v -o $output

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webview_go-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create or update tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch --tags
          git tag -f "${{ github.event.inputs.tag_name }}"
          git push origin --force "refs/tags/${{ github.event.inputs.tag_name }}"

      - name: Extract ordinal title
        id: title
        run: |
          tag="${{ github.event.inputs.tag_name }}"
          ordinal=$(echo "$tag" | sed 's/^continuous-//' | tr '[:lower:]' '[:upper:]')
          echo "release_title=${ordinal^} Continuous Build" >> $GITHUB_OUTPUT

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          name: ${{ steps.title.outputs.release_title }}
          body: |
            Latest cross-platform build of webview_go.
            ✅ Linux amd64
            ✅ macOS amd64
            ✅ Windows amd64
          files: ./dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


