name: Continuous Build

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      # -------------------------
      # Install dependencies
      # -------------------------
      - name: Install dependencies (Linux)
        if: matrix.goos == 'linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev zip

      - name: Install dependencies (macOS)
        if: matrix.goos == 'darwin'
        run: |
          brew update
          brew install pkg-config zip

      - name: Install dependencies (Windows)
        if: matrix.goos == 'windows'
        run: choco install -y zip

      # -------------------------
      # Skip unsupported builds
      # -------------------------
      - name: Skip unsupported builds
        if: |
          (matrix.goos == 'linux' && matrix.goarch == 'arm64') ||
          (matrix.goos == 'windows' && matrix.goarch == 'arm64')
        run: echo "Skipping unsupported build for ${{ matrix.goos }} ${{ matrix.goarch }}" && exit 0

      # -------------------------
      # Build step (Unix)
      # -------------------------
      - name: Build (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p dist
          OUTPUT="dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o "$OUTPUT"

      # -------------------------
      # Build step (Windows)
      # -------------------------
      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          mkdir dist
          $output = "dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          go build -v -o $output

      # -------------------------
      # Upload artifacts
      # -------------------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webview_go-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/webview_go-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create or Update Continuous Build Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: continuous
          name: "Continuous Build"
          body: "Latest cross-platform build of webview_go (auto-updated on push)."
          files: ./dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
