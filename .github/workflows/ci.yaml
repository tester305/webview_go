 # CHANGE IT
name: CI Pipeline
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { image: macos-14,     go: '1.22' }
          - { image: macos-14,     go: '1.21' }
          - { image: macos-14,     go: '1.20' }
          - { image: macos-14,     go: '1.19' }
          - { image: macos-12,     go: '1.18' }
          - { image: macos-12,     go: '1.17' }
          - { image: macos-12,     go: '1.16' }
          - { image: macos-12,     go: '1.15' }
          - { image: macos-12,     go: '1.14' }
          - { image: macos-12,     go: '1.13' }
          - { image: ubuntu-22.04, go: '1.22', apt: libgtk-4-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.22', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.21', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.20', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.19', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.18', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.17', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.16', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.15', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.14', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: ubuntu-22.04, go: '1.13', apt: libgtk-3-dev libwebkit2gtk-4.1-dev }
          - { image: windows-2022, go: '1.22' }
          - { image: windows-2022, go: '1.21' }
          - { image: windows-2022, go: '1.20' }

    name: Build (${{ matrix.image }}, go ${{ matrix.go }})
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        if: runner.os == 'Linux' && matrix.apt
        run: sudo apt-get update && sudo apt-get install -y ${{ matrix.apt }}

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Set CGO
        run: echo "CGO_ENABLED=1" >> $GITHUB_ENV

      - name: Replace webview-go fork
        run: |
          echo "replace github.com/webview/webview_go => github.com/tester305/webview_go latest" >> go.mod
          go mod tidy
          go mod vendor

      - name: Build examples
        run: |
          go build ./examples/basic
          go build ./examples/bind

      - name: Run tests
        run: go test -v ./...
