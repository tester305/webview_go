name: CI Pipeline
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # -------------------------------------------------
          # macOS-15 (arm64) – Go 1.16+ only (native arm64)
          # -------------------------------------------------
          - { image: macos-15, go: '1.18' }
          - { image: macos-15, go: '1.17' }
          - { image: macos-15, go: '1.16' }

          # -------------------------------------------------
          # macOS-14 (arm64) – Go 1.19+
          # -------------------------------------------------
          - { image: macos-14, go: '1.22' }
          - { image: macos-14, go: '1.21' }
          - { image: macos-14, go: '1.20' }
          - { image: macos-14, go: '1.19' }

          # -------------------------------------------------
          # macOS-13 (x86_64) – Go 1.13–1.15 + DWARF fix
          # -------------------------------------------------
          - { image: macos-13, go: '1.15', dwarf_fix: true }
          - { image: macos-13, go: '1.14', dwarf_fix: true }
          - { image: macos-13, go: '1.13', dwarf_fix: true }

          # -------------------------------------------------
          # Ubuntu 22.04 – GTK-3 / WebKit-4.1 (all Go)
          # -------------------------------------------------
          - { image: ubuntu-22.04, go: '1.22', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.21', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.20', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.19', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.18', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.17', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.16', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.15', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.14', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }
          - { image: ubuntu-22.04, go: '1.13', apt: libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config }

          # -------------------------------------------------
          # Windows
          # -------------------------------------------------
          - { image: windows-2022, go: '1.22' }
          - { image: windows-2022, go: '1.21' }
          - { image: windows-2022, go: '1.20' }

    name: Build (${{ matrix.image }}, go ${{ matrix.go }})
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      # -------------------------------------------------
      # Linux: install deps + pkg-config fix
      # -------------------------------------------------
      - name: Install Linux dependencies
        if: runner.os == 'Linux' && matrix.apt
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y ${{ matrix.apt }}
          PKG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig"
          echo "PKG_CONFIG_PATH=$PKG_PATH:\$PKG_CONFIG_PATH" >> $GITHUB_ENV

      # -------------------------------------------------
      # Go setup
      # -------------------------------------------------
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Enable CGO
        run: echo "CGO_ENABLED=1" >> $GITHUB_ENV

      # -------------------------------------------------
      # macOS-13: disable DWARF for old Go (1.13–1.15)
      # -------------------------------------------------
      - name: Disable DWARF on macOS-13 + old Go
        if: runner.os == 'macOS' && startsWith(matrix.image, 'macos-13') && matrix.dwarf_fix
        run: |
          echo "CGO_LDFLAGS=-ldflags=-w" >> $GITHUB_ENV

      # -------------------------------------------------
      # Use your fork
      # -------------------------------------------------
      - name: Replace webview-go fork
        run: |
          echo "replace github.com/webview/webview_go => github.com/tester305/webview_go latest" >> go.mod
          go mod tidy
          go mod vendor

      # -------------------------------------------------
      # Build & test
      # -------------------------------------------------
      - name: Build examples
        run: |
          go build -ldflags=-w ./examples/basic
          go build -ldflags=-w ./examples/bind

      - name: Run tests
        run: go test -v ./...
